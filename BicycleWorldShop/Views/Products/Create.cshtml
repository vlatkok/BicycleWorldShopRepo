@model BicycleWorldShop.Models.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"></script>
<script language="javascript" type="text/javascript">
    function GetSubCategory(types1) {
        var procemessage = "<option value='0'> Please wait...</option>";
        $("#ddlsubcategory").html(procemessage).show();
        var url = "/Products/GetSubcategoryByID/";

        $.ajax({
            url: url,
            data: { types: types1 },
            cache: false,
            type: "POST",
            success: function (data) {
                var markup = "<option value='0'>Select Subcategory</option>";
                //        var markup = "";
                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                }

                $("#ddlsubcategory").html(markup).show();
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });

    }
</script>



<script type="text/javascript">

    function onSelectedIndexChanged(value) {

        document.getElementById('foo').innerHTML = value;

    }




</script>





<h2>Create</h2>




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Feature, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Feature, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Feature, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Video, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Video, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Video, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PartNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PartNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PartNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        @*
            <div class="form-group">
                @Html.Label("Photo", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="PhotoUpload" class="form-control"
                           accept="image/jpeg"
                           onchange="previewImage(event)" />
                </div>
            </div>

        *@



        <div class="form-group">
            @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Availability, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Availability, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Availability, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Brand, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastUpdated, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastUpdated, new { htmlAttributes = new { @class = "form-control" }, })
                @Html.ValidationMessageFor(model => model.LastUpdated, "", new { @class = "text-danger" })
            </div>
        </div>

        @*          <div class="form-group">
            @Html.LabelFor(model => model.Category_Id, htmlAttributes: new { @class = "control-label col-md-2" })


                   <div class="col-md-10">
            @Html.EditorFor(model => model.Category_Id,  new { htmlAttributes = new { @class = "form-control", @id="editorr" } })
                   @Html.ValidationMessageFor(model => model.Category_Id, "", new { @class = "text-danger" })

                    </div>
                     @Html.DisplayFor(model =>model.Category_Id );
                         </div>

        *@



        <div class="form-group">
            @Html.LabelFor(model => model.Category_Id, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @using (Html.BeginForm())
                {
                    List<SelectListItem> items = new List<SelectListItem>();
                    items.Add(new SelectListItem
                    {
                        Text = "Select Category",
                        Value = "0"
                    });



                    items.Add(new SelectListItem
                    {
                        Text = "Bikes",
                        Value = "1"
                    });
                    items.Add(new SelectListItem
                    {
                        Text = "Parts",
                        Value = "2"

                    });
                    items.Add(new SelectListItem
                    {
                        Text = "Shoes",
                        Value = "3"
                    });
                    items.Add(new SelectListItem
                    {
                        Text = "Tires",
                        Value = "4"
                    });
                    items.Add(new SelectListItem
                    {
                        Text = "Accessories",
                        Value = "5"
                    }); items.Add(new SelectListItem
                    {
                        Text = "Clothing",
                        Value = "6"
                    });
                    items.Add(new SelectListItem
                    {
                        Text = "Helmets",
                        Value = "7"
                    });
                    items.Add(new SelectListItem
                    {
                        Text = "Car Racks",
                        Value = "8"
                    });


                    //   @Html.DropDownList("List", items);
                    <select id="categoryDropDown" onchange="GetSubCategory(this.options[this.selectedIndex].text)" class="form-control">



                        @foreach (var item in items)
                    {
                            <text>
                                <option value="@item.Value">@item.Text</option>

                            </text>
                        }

                    </select>;


                    //     @Html.DropDownListFor(m => m.Category, new SelectList(Model, "Id", "Name"), new { @id = "ddlstate", @style = "width:200px;", @onchange = "javascript:GetSubCategory(this.value);" })
                    //new SelectList(Enumerable.Empty <SelectListItem>())



                    //      <select id="ddlsubcategory" name="ddlsubcategory" style="width: 500px" onchange=""></select>
                    ///// probaj so ViewBAG
                    @Html.DropDownListFor(model => model.Category_Id, new SelectList(Enumerable.Empty<SelectListItem>()),
                   "Select a Subcategory", new { @id = "ddlsubcategory", @class = "form-control", @onChange = "onSelectedIndexChanged(this.value)" })


                    //        @Html.EditorFor(model => model.Category_Id, new { htmlAttributes = new { @class = "form-control", @id = "ddls" } })

                    @Html.ValidationMessageFor(model => model.Category_Id, "", new { @class = "text-danger" })

                }

            </div>



            <div id="foo">        </div>


        </div>


        @*Html.Partial("Upload"); *@


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" id="uploader" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
